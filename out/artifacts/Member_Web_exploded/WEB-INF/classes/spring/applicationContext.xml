<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.1.xsd
  		http://www.springframework.org/schema/tx
  		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd		
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

	<!-- <bean class="tools.EncryptPropertyPlaceholderConfigurer" p:location="classpath:db.properties" 
		p:fileEncoding="utf-8" /> -->
	<context:component-scan base-package="dao,tools" />
	<context:property-placeholder location="classpath:resource/db.properties" />
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<!-- 数据源连接参数配置； -->
		<property name="username" value="${db.username}" />
		<property name="url" value="${db.url}" />
		<property name="password" value="${db.password}" />
		<property name="driverClassName" value="${db.driver}" />
		<!-- 连接池启动时的初始值 -->
		<property name="maxWait" value="20000"></property>
		<property name="validationQuery" value="SELECT 1"></property>
		<property name="testWhileIdle" value="true"></property>
		<property name="testOnBorrow" value="true"></property>
		<property name="timeBetweenEvictionRunsMillis" value="3600000"></property>
		<property name="numTestsPerEvictionRun" value="50"></property>
		<property name="minEvictableIdleTimeMillis" value="120000"></property>
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="6000000" />
	</bean>



	<!-- 配置SessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!--<property name="mapperLocations" value="classpath:config/*.xml" /> -->
		<!--加载mybatis的全局配置文件 -->
		<property name="configLocation" value="classpath:mybatis/sqlMapConfig.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:mapper/InterestMapper.xml</value>
			</list>
		</property>
		<!-- 配置Mybatis的插件plugin -->
		<property name="plugins">
			<array>
				<bean class="pageinterceptor.PageInterceptor">

				</bean>
			</array>
		</property>

	</bean>
	<!-- 自动扫描mapper接口,注入sqlSessionFactory -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="mapper" />

	</bean>
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/> -->
	<!-- 定义切面 -->
	<aop:config>
		<aop:pointcut expression="execution(* dao.*.* (..))" id="txPointCut" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut" />
	</aop:config>

	<!-- 声明式事务 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 传播行为 -->
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="select*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 连接池配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- 最大连接数 -->
		<property name="maxTotal" value="1000" />
		<!-- 最大空闲连接数 -->
		<property name="maxIdle" value="100" />
		<!-- 每次释放连接的最大数目 -->
		<property name="numTestsPerEvictionRun" value="1024" />
		<!-- 释放连接的扫描间隔（毫秒） -->
		<property name="timeBetweenEvictionRunsMillis" value="30000" />

		<!-- 连接最小空闲时间 -->
		<property name="minEvictableIdleTimeMillis" value="1800000" />
		<!-- 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 -->
		<property name="softMinEvictableIdleTimeMillis" value="10000" />
		<!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->
		<property name="maxWaitMillis" value="10000" />
		<!-- 在获取连接的时候检查有效性, 默认false -->
		<property name="testOnBorrow" value="true" />
		<!-- 在空闲时检查有效性, 默认false -->
		<property name="testWhileIdle" value="true" />
		<!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
		<property name="blockWhenExhausted" value="false" />
	</bean>
	<!-- jedis客户端单机版 -->
	<bean id="redisClient" class="redis.clients.jedis.JedisPool">
		<constructor-arg name="host" value="123.56.153.56"></constructor-arg>
		<constructor-arg name="port" value="6379"></constructor-arg>
		<constructor-arg name="poolConfig" ref="jedisPoolConfig"></constructor-arg>
	</bean>

	<bean id="jedisClient" class="jedisService.impl.JedisClientSingle" />

</beans>